{
	"info": {
		"_postman_id": "47666523-af83-4680-a9ae-1b3b6d71dba4",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12312112",
		"_collection_link": "https://lively-firefly-365831.postman.co/workspace/MVP-StandardTask~9c6bf4e8-d625-4df4-bfbc-f70591ce8023/collection/12312112-47666523-af83-4680-a9ae-1b3b6d71dba4?action=share&source=collection_link&creator=12312112"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"isSuccess\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"isSuccess\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"// Get the current timestamp in seconds\r",
									"var timestamp = Math.floor(Date.now() / 1000);\r",
									"\r",
									"// Create a base email address\r",
									"var baseEmail = 'user';\r",
									"\r",
									"// Combine the base email with the timestamp\r",
									"var email = baseEmail + timestamp + '@example.com';\r",
									"\r",
									"// Set the unique email in the environment or global variable\r",
									"pm.environment.set(\"email\", email);\r",
									"\r",
									"try {\r",
									"    var requestBody = pm.request.body.raw;\r",
									"\r",
									"    // Convert the request body from a string to JSON\r",
									"    const requestBodyJson = JSON.parse(requestBody);\r",
									"\r",
									"    // Set the environment variables\r",
									"    if ( requestBodyJson.password){\r",
									"        pm.environment.set(\"password\", requestBodyJson.password);\r",
									"    } else {\r",
									"        console.error(\" password field is missing in the request body.\");\r",
									"    }\r",
									"} catch (e) {\r",
									"    console.error(\"Failed to parse request body as JSON:\", e);\r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n\r\n{\r\n  \"firstName\": \"aa\",\r\n  \"lastName\": \"aa\",\r\n  \"countryDialCode\": \"\",\r\n  \"mobilePhone\": \"\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"abc123\",\r\n  \"terms\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60968/authentication/authentication/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60968",
							"path": [
								"authentication",
								"authentication",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "RegisterWithSameCredentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"isSuccess\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"isSuccess\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n\r\n{\r\n  \"firstName\": \"aa\",\r\n  \"lastName\": \"aa\",\r\n  \"countryDialCode\": \"\",\r\n  \"mobilePhone\": \"\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"abc123\",\r\n  \"terms\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60968/authentication/authentication/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60968",
							"path": [
								"authentication",
								"authentication",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "RegisterWithNullCredentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Parameter can not be null\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									" // \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"isSuccess\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"isSuccess\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"if (jsonData.isSuccess) {\r",
									"    pm.environment.set(\"isSuccess\", jsonData.id);\r",
									"\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n\r\n{\r\n  \"firstName\": \"aa\",\r\n  \"lastName\": \"aa\",\r\n  \"countryDialCode\": \"\",\r\n  \"mobilePhone\": \"\",\r\n  \"email\": \"\",\r\n  \"password\": \"abc123\",\r\n  \"terms\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60968/authentication/authentication/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60968",
							"path": [
								"authentication",
								"authentication",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "SignIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"access_token\", jsonData.token.token); // Set the token as an environment variable\r",
									"\r",
									"// Log the token value to the console\r",
									"console.log(\"Access-token is\"+pm.environment.get(\"access_token\"));\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									" //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"isSuccess\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"token\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"token\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"expires\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"token\",\r",
									"        \"expires\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"isSuccess\",\r",
									"    \"token\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"rememberMe\": false,\r\n\"email\": \"{{email}}\",\r\n\"password\": \"{{password}}\"\r\n}\r\n\r\n/*{\r\n  \"rememberMe\": false,\r\n  \"email\": \"tokas.preeti@gmail.com\",\r\n  \"password\": \"tokas1\"\r\n}*/",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60968/authentication/authentication/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60968",
							"path": [
								"authentication",
								"authentication",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "SignInWithwrongPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"isSuccess\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"isSuccess\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rememberMe\": false,\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"abc\"\r\n}\r\n\r\n/*{\r\n\"rememberMe\": false,\r\n\"email\": \"tokas.preeti@gmail.com\",\r\n\"password\": \"tokas\"\r\n}*/",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60968/authentication/authentication/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60968",
							"path": [
								"authentication",
								"authentication",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "SignInWithNullValues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"isSuccess\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"isSuccess\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{ \"rememberMe\": false,\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"\"\r\n}\r\n\r\n/*{{\r\n\"rememberMe\": false,\r\n\"email\": \"tokas.preeti@gmail.com\",\r\n\"password\": \"\"\r\n}*/",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60968/authentication/authentication/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60968",
							"path": [
								"authentication",
								"authentication",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"newPassword\":\"Password1\",\r\n\"oldPassword\":\"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60968/authentication/authentication/updatePassword",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60968",
							"path": [
								"authentication",
								"authentication",
								"updatePassword"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Language",
			"item": [
				{
					"name": "AddLanguage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"if(jsonData.id){\r",
									"pm.environment.set(\"LanguageID\", jsonData.id); \r",
									"}\r",
									"// Log the token value to the console\r",
									"console.log(\"LanguageID \"+pm.environment.get(\"LanguageID\"));\r",
									"\r",
									"\r",
									"\r",
									"//set Request body as environment variable\r",
									"var requestBody = pm.request.body.raw;\r",
									"\r",
									"    // Convert the request body from a string to JSON\r",
									"    const requestBodyJson = JSON.parse(requestBody);\r",
									"\r",
									"    // Set the environment variables\r",
									"    pm.environment.set(\"language\", requestBodyJson.name);\r",
									"\r",
									"  \r",
									"  \r",
									"  pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"id\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"id\"\r",
									"  ]\r",
									"} \r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/javascript, */*; q=0.01",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Connection",
								"value": "keep-alive",
								"type": "text"
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br, zstd",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"english\",\r\n\"level\": \"Basic\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/profile/profile/addLanguage",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile",
								"profile",
								"addLanguage"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddDuplicateLanguage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"This language is already exist in your language list.\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/javascript, */*; q=0.01",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Connection",
								"value": "keep-alive",
								"type": "text"
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br, zstd",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"{{language}}\",\r\n\"level\": \"Basic\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/profile/profile/addLanguage",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile",
								"profile",
								"addLanguage"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetLanguage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" var Language=pm.environment.get(\"language\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Language\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"personLanguageId\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"language\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"languageLevel\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"personLanguageId\",\r",
									"        \"language\",\r",
									"        \"languageLevel\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/profile/profile/getLanguage",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile",
								"profile",
								"getLanguage"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateLanguage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"  \r",
									"  \r",
									"  pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{LanguageID}}\",\r\n  \"name\": \"{{language}}\",\r\n  \"level\": \"Fluent\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/updateLanguage",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"updateLanguage"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateLanguageWithSameData",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" \r",
									"  pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{LanguageID}}\",\r\n  \"name\": \"{{language}}\",\r\n  \"level\": \"Fluent\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/updateLanguage",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"updateLanguage"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetLanguage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"  pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" var Language=pm.environment.get(\"language\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Language\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									" // \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"personLanguageId\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"language\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"languageLevel\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"personLanguageId\",\r",
									"        \"language\",\r",
									"        \"languageLevel\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/profile/profile/getLanguage",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile",
								"profile",
								"getLanguage"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteLanguage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"  \r",
									"  \r",
									"  pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"language\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"language\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{LanguageID}}\"\r\n \r\n       \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/deleteLanguage",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"deleteLanguage"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetLanguage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"  pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" var Language=pm.environment.get(\"LanguageID\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).not.to.include(\"LanguageID\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									" // \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"personLanguageId\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"language\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"languageLevel\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"personLanguageId\",\r",
									"        \"language\",\r",
									"        \"languageLevel\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/profile/profile/getLanguage",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile",
								"profile",
								"getLanguage"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddLanguageWithNullValues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" \r",
									"var jsonData = pm.response.json();\r",
									"if(jsonData.id){\r",
									"pm.environment.set(\"languageNullValue\", jsonData.id); \r",
									"}\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"id\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"id\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/javascript, */*; q=0.01",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Connection",
								"value": "keep-alive",
								"type": "text"
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br, zstd",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"a\",\r\n  \"level\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/profile/profile/addLanguage",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile",
								"profile",
								"addLanguage"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteLanguageWithNullValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									" \r",
									"  \r",
									"  pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"const schema={\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"language\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"language\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{languageNullValue}}\"\r\n    \r\n    //\"id\":\"6699921c138c7a000168eda0\"\r\n \r\n       \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/deleteLanguage",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"deleteLanguage"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Skill",
			"item": [
				{
					"name": "AddSkill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"if(jsonData.id){\r",
									"pm.environment.set(\"skillID\", jsonData.id); \r",
									"}\r",
									"\r",
									"// Log the token value to the console\r",
									"console.log(\"LanguageID \"+pm.environment.get(\"skillID\"));\r",
									"\r",
									"\r",
									"\r",
									"//set Request body as environment variable\r",
									"var requestBody = pm.request.body.raw;\r",
									"\r",
									"    // Convert the request body from a string to JSON\r",
									"    const requestBodyJson = JSON.parse(requestBody);\r",
									"\r",
									"    // Set the environment variables\r",
									"    pm.environment.set(\"skill\", requestBodyJson.Skill);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									" //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"id\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"id\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"PersonSkillId\": 0,\r\n  \"Skill\": \"tester\",\r\n  \"ExperienceLevel\": \"Beginner\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/addSkill",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"addSkill"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddDuplicateSkill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"\r",
									"\r",
									" const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"PersonSkillId\": 0,\r\n\"Skill\": \"{{skill}}\",\r\n\"ExperienceLevel\": \"Beginner\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/addSkill",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"addSkill"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSkill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" var skill = pm.environment.get(\"skill\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"pm.expect(pm.response.text()).to.include(skill);\r",
									"});\r",
									"\r",
									"const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"personSkillId\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"skill\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"experienceLevel\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"personSkillId\",\r",
									"        \"skill\",\r",
									"        \"experienceLevel\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//headers\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:60190/profile/profile/getSkill",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"getSkill"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateSkill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									" const schema=  {\r",
									" //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"id\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"id\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"PersonSkillId\": \"{{skillID}}\",\r\n  \"Skill\": \"tester\",\r\n  \"ExperienceLevel\": \"Intermediate\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/updateSkill",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"updateSkill"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateSkillWiithSameData",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"his skill is already added to your skill list.\");\r",
									"});\r",
									"\r",
									"const schema= {\r",
									" //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"PersonSkillId\": \"{{skillID}}\",\r\n  \"Skill\": \"tester\",\r\n  \"ExperienceLevel\": \"Intermediate\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/updateSkill",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"updateSkill"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSkill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var skill = pm.environment.get(\"skill\");\r",
									"    pm.expect(pm.response.text()).to.include(skill);\r",
									"\r",
									"\r",
									"    console.log(pm.response.text());\r",
									"console.log();\r",
									"\r",
									"});\r",
									"\r",
									"const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"personSkillId\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"skill\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"experienceLevel\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"personSkillId\",\r",
									"        \"skill\",\r",
									"        \"experienceLevel\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/profile/profile/getSkill",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"getSkill"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteSkill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"const schema= {\r",
									" // \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"skill\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"skill\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"PersonSkillId\": \"{{skillID}}\",\r\n  \"Skill\": \"test1\",\r\n  \"ExperienceLevel\": \"Intermediate\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/deleteSkill",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"deleteSkill"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSkill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var skill = pm.environment.get(\"skill\");\r",
									"    pm.expect(pm.response.text()).not.to.include(skill);\r",
									"\r",
									"\r",
									"    console.log(pm.response.text());\r",
									"console.log();\r",
									"\r",
									"});\r",
									"\r",
									"const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"personSkillId\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"skill\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"experienceLevel\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"personSkillId\",\r",
									"        \"skill\",\r",
									"        \"experienceLevel\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/profile/profile/getSkill",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"getSkill"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddSkillWithNullValues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"if(jsonData.id){\r",
									"pm.environment.set(\"skillIDNullValues\", jsonData.id); \r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									" const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"id\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"id\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"PersonSkillId\": 0,\r\n  \"Skill\": \"test2Null1\",\r\n  \"ExperienceLevel\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/addSkill",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"addSkill"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteSkillWithNullValues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"const schema= {\r",
									" // \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"skill\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"skill\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"PersonSkillId\": \"{{skillIDNullValues}}\",\r\n  \"Skill\": \"test1\",\r\n  \"ExperienceLevel\": \"Intermediate\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/deleteSkill",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"deleteSkill"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Certification",
			"item": [
				{
					"name": "AddCertification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"if(jsonData.id){\r",
									"pm.environment.set(\"CertificationID\", jsonData.id);\r",
									"}\r",
									"\r",
									"\r",
									"//set Request body as environment variable\r",
									"var requestBody = pm.request.body.raw;\r",
									"\r",
									"    // Convert the request body from a string to JSON\r",
									"    const requestBodyJson = JSON.parse(requestBody);\r",
									"\r",
									"    // Set the environment variables\r",
									"    pm.environment.set(\"certification\", requestBodyJson.certificationName);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"id\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"id\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"certificationName\": \"networking\",\r\n  \"certificationFrom\": \"microsoft\",\r\n  \"certificationYear\": \"2018\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/addCertification",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"addCertification"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddDuplicateCertification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"This information is already exist.\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"certificationName\": \"{{certification}}\",\r\n  \"certificationFrom\": \"microsoft\",\r\n  \"certificationYear\": \"2018\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/addCertification",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"addCertification"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCertification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var certificationID=pm.environment.get(\"CertificationID\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(certificationID);\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									" // \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"certificationName\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"certificationFrom\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"certificationYear\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"id\",\r",
									"        \"certificationName\",\r",
									"        \"certificationFrom\",\r",
									"        \"certificationYear\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/profile/profile/getCertification",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"getCertification"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCertificatiioon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{CertificationID}}\",\r\n  \"certificationName\": \"network\",\r\n  \"certificationFrom\": \"microsoft\",\r\n  \"certificationYear\": \"2020\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/updateCertification",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"updateCertification"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateCertificatiioonWithSameData",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									" //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{CertificationID}}\",\r\n  \"certificationName\": \"network\",\r\n  \"certificationFrom\": \"microsoft\",\r\n  \"certificationYear\": \"2020\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/updateCertification",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"updateCertification"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCertification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var certificationID=pm.environment.get(\"CertificationID\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(certificationID);\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									" // \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"certificationName\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"certificationFrom\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"certificationYear\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"id\",\r",
									"        \"certificationName\",\r",
									"        \"certificationFrom\",\r",
									"        \"certificationYear\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/profile/profile/getCertification",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"getCertification"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCertification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									" // \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"certificationName\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"certificationName\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n  \"id\": \"{{CertificationID}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/deleteCertification",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"deleteCertification"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCertification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var certificationID=pm.environment.get(\"CertificationID\");\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).not.to.include(certificationID);\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									" // \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"certificationName\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"certificationFrom\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"certificationYear\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"id\",\r",
									"        \"certificationName\",\r",
									"        \"certificationFrom\",\r",
									"        \"certificationYear\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/profile/profile/getCertification",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"getCertification"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddCertificationWithNullValues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var jsonData = pm.response.json();\r",
									"if(jsonData.id){\r",
									"pm.environment.set(\"CertificationIDNullValues\", jsonData.id);\r",
									"}\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"id\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"id\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"certificationName\":\"\",\r\n  \"certificationFrom\": \"microsoft\",\r\n  \"certificationYear\": \"2022\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/addCertification",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"addCertification"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCertification Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"certificationName\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"certificationName\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n  \"id\": \"{{CertificationIDNullValues}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/deleteCertification",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"deleteCertification"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Profile",
			"item": [
				{
					"name": "AddInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"personId\": 0,\r\n  \"description\": \"description for api testing\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/addInfo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"addInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"username\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									" // \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"username\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"isDeactivated\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"username\",\r",
									"    \"isDeactivated\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/profile/profile/getProfile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"getProfile"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProfilePhoto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"myPhotoUrl\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"otherPhotoUrl\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"myPhotoUrl\",\r",
									"    \"otherPhotoUrl\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/profile/profile/getProfilePhoto/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"getProfilePhoto",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSellerDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/profile/profile/getSellerDetails/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"getSellerDetails",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "IsAuthenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"isAuthenticated\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"username\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"isAuthenticated\",\r",
									"    \"username\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/profile/profile/isUserAuthenticated",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"isUserAuthenticated"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateAvailability",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"AvailabilityType\": \"1\",\r\n  \"AvailableHours\": \"1\",\r\n  \"EarnTarget\": \"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/updateAvailability",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"updateAvailability"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateFirstAndLastName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"hits93111\",\r\n  \"lastName\": \"hits93111\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:60190/profile/profile/updateFirstAndLastName",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"updateFirstAndLastName"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Listing",
			"item": [
				{
					"name": "AddListing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"ListingID\", jsonData.id);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"id\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"editFlag\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"id\",\r",
									"    \"editFlag\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"TestAPI1\",\r\n  \"description\": \"DESC\",\r\n  \"categoryId\": \"1\",\r\n  \"subcategoryId\": \"1\",\r\n  \"tags\": [\r\n    {\r\n      \"id\": \"a\",\r\n      \"text\": \"a\"\r\n    }\r\n  ],\r\n  \"serviceType\": 0,\r\n  \"locationType\": 1,\r\n  \"availability\": {\r\n    \"startDate\": \"2024-06-26\",\r\n    \"endDate\": \"\",\r\n    \"dayEntries\": [\r\n      {\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\",\r\n        \"Available\": false\r\n      },\r\n      {\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\",\r\n        \"Available\": false\r\n      },\r\n      {\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\",\r\n        \"Available\": false\r\n      },\r\n      {\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\",\r\n        \"Available\": false\r\n      },\r\n      {\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\",\r\n        \"Available\": false\r\n      },\r\n      {\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\",\r\n        \"Available\": false\r\n      },\r\n      {\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\",\r\n        \"Available\": false\r\n      }\r\n    ]\r\n  },\r\n  \"skillTrade\": [\r\n    {\r\n      \"id\": \"b\",\r\n      \"text\": \"b\"\r\n    }\r\n  ],\r\n  \"isTradable\": true,\r\n  \"charge\": 0,\r\n  \"credentials\": true,\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:51689/listing/listing/addListing",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"addListing"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMultipleServiceListing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"data\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"charge\": {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"category\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"serviceType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"locationType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"availability\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"startDate\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"endDate\": {\r",
									"                  \"type\": \"null\"\r",
									"                },\r",
									"                \"dayEntries\": {\r",
									"                  \"type\": \"array\",\r",
									"                  \"items\": [\r",
									"                    {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"startTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"endTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"available\": {\r",
									"                          \"type\": \"boolean\"\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"startTime\",\r",
									"                        \"endTime\",\r",
									"                        \"available\"\r",
									"                      ]\r",
									"                    },\r",
									"                    {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"startTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"endTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"available\": {\r",
									"                          \"type\": \"boolean\"\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"startTime\",\r",
									"                        \"endTime\",\r",
									"                        \"available\"\r",
									"                      ]\r",
									"                    },\r",
									"                    {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"startTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"endTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"available\": {\r",
									"                          \"type\": \"boolean\"\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"startTime\",\r",
									"                        \"endTime\",\r",
									"                        \"available\"\r",
									"                      ]\r",
									"                    },\r",
									"                    {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"startTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"endTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"available\": {\r",
									"                          \"type\": \"boolean\"\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"startTime\",\r",
									"                        \"endTime\",\r",
									"                        \"available\"\r",
									"                      ]\r",
									"                    },\r",
									"                    {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"startTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"endTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"available\": {\r",
									"                          \"type\": \"boolean\"\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"startTime\",\r",
									"                        \"endTime\",\r",
									"                        \"available\"\r",
									"                      ]\r",
									"                    },\r",
									"                    {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"startTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"endTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"available\": {\r",
									"                          \"type\": \"boolean\"\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"startTime\",\r",
									"                        \"endTime\",\r",
									"                        \"available\"\r",
									"                      ]\r",
									"                    },\r",
									"                    {\r",
									"                      \"type\": \"object\",\r",
									"                      \"properties\": {\r",
									"                        \"startTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"endTime\": {\r",
									"                          \"type\": \"string\"\r",
									"                        },\r",
									"                        \"available\": {\r",
									"                          \"type\": \"boolean\"\r",
									"                        }\r",
									"                      },\r",
									"                      \"required\": [\r",
									"                        \"startTime\",\r",
									"                        \"endTime\",\r",
									"                        \"available\"\r",
									"                      ]\r",
									"                    }\r",
									"                  ]\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"startDate\",\r",
									"                \"endDate\",\r",
									"                \"dayEntries\"\r",
									"              ]\r",
									"            },\r",
									"            \"isTradable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"isActive\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"tags\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"skillTrade\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"text\": {\r",
									"                      \"type\": \"string\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"text\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"worksample\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"createdOn\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"createdBy\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"updatedOn\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"updatedBy\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"comments\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"ratingTotalsAndCounts\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"workSampleMainImg\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"isDeleted\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"sellerId\",\r",
									"            \"charge\",\r",
									"            \"title\",\r",
									"            \"description\",\r",
									"            \"categoryId\",\r",
									"            \"category\",\r",
									"            \"subcategoryId\",\r",
									"            \"serviceType\",\r",
									"            \"locationType\",\r",
									"            \"availability\",\r",
									"            \"isTradable\",\r",
									"            \"isActive\",\r",
									"            \"tags\",\r",
									"            \"skillTrade\",\r",
									"            \"worksample\",\r",
									"            \"createdOn\",\r",
									"            \"createdBy\",\r",
									"            \"updatedOn\",\r",
									"            \"updatedBy\",\r",
									"            \"comments\",\r",
									"            \"ratingTotalsAndCounts\",\r",
									"            \"workSampleMainImg\",\r",
									"            \"isDeleted\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"count\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"data\",\r",
									"    \"count\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:51689/listing/listing/getMultipleServiceListing",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"getMultipleServiceListing"
							]
						}
					},
					"response": []
				},
				{
					"name": "EditListing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"id\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"editFlag\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"id\",\r",
									"    \"editFlag\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"TestAPI1Edit\",\r\n  \"description\": \"DESC\",\r\n  \"categoryId\": 1,\r\n  \"subcategoryId\": 1,\r\n  \"tags\": [\r\n    {\r\n      \"id\": \"a\",\r\n      \"text\": \"a\"\r\n    }\r\n  ],\r\n  \"serviceType\": 0,\r\n  \"locationType\": 1,\r\n  \"availability\": {\r\n    \"startDate\": \"2024-06-26\",\r\n    \"endDate\": \"\",\r\n    \"dayEntries\": [\r\n      {\r\n        \"Available\": false,\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\"\r\n      },\r\n      {\r\n        \"Available\": false,\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\"\r\n      },\r\n      {\r\n        \"Available\": false,\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\"\r\n      },\r\n      {\r\n        \"Available\": false,\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\"\r\n      },\r\n      {\r\n        \"Available\": false,\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\"\r\n      },\r\n      {\r\n        \"Available\": false,\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\"\r\n      },\r\n      {\r\n        \"Available\": false,\r\n        \"StartTime\": \"\",\r\n        \"EndTime\": \"\"\r\n      }\r\n    ]\r\n  },\r\n  \"skillTrade\": [\r\n    {\r\n      \"id\": \"b\",\r\n      \"text\": \"b\"\r\n    }\r\n  ],\r\n  \"isTradable\": true,\r\n  \"charge\": 0,\r\n  \"credentials\": true,\r\n  \"isActive\": true,\r\n  \"id\": \"{{ListingID}}\",\r\n  \"sellerId\": \"610b4c031508eb0001567383\",\r\n  \"workSample\": null,\r\n  \"comments\": null,\r\n  \"ratings\": null,\r\n  \"ratingAverages\": null,\r\n  \"ratingTotalsAndCounts\": null,\r\n  \"createdOn\": \"2024-06-26T04:12:08Z\",\r\n  \"createdBy\": \"610b4c031508eb0001567383\",\r\n  \"updatedOn\": \"2024-06-26T04:48:02.877Z\",\r\n  \"updatedBy\": \"610b4c031508eb0001567383\",\r\n  \"isDeleted\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:51689/listing/listing/addListing",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"addListing"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteListing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"title\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"title\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"{{ListingID}}\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:51689/listing/listing/deleteServiceListing",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"deleteServiceListing"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetService",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"serviceListing\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sellerId\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"charge\": {\r",
									"          \"type\": \"number\"\r",
									"        },\r",
									"        \"title\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"description\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"serviceType\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"locationType\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"availability\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"startDate\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"endDate\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"dayEntries\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"startTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"endTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"available\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"startTime\",\r",
									"                    \"endTime\",\r",
									"                    \"available\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"startTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"endTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"available\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"startTime\",\r",
									"                    \"endTime\",\r",
									"                    \"available\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"startTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"endTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"available\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"startTime\",\r",
									"                    \"endTime\",\r",
									"                    \"available\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"startTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"endTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"available\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"startTime\",\r",
									"                    \"endTime\",\r",
									"                    \"available\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"startTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"endTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"available\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"startTime\",\r",
									"                    \"endTime\",\r",
									"                    \"available\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"startTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"endTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"available\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"startTime\",\r",
									"                    \"endTime\",\r",
									"                    \"available\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"startTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"endTime\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"available\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"startTime\",\r",
									"                    \"endTime\",\r",
									"                    \"available\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"startDate\",\r",
									"            \"endDate\",\r",
									"            \"dayEntries\"\r",
									"          ]\r",
									"        },\r",
									"        \"workSample\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"categoryId\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"subcategoryId\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"tags\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"id\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"text\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"id\",\r",
									"                \"text\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"comments\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"ratings\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"ratingAverages\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"ratingTotalsAndCounts\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"skillTrade\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"id\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"text\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"id\",\r",
									"                \"text\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"isTradable\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"isActive\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"createdOn\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"createdBy\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"updatedOn\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"updatedBy\": {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        \"isDeleted\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"id\",\r",
									"        \"sellerId\",\r",
									"        \"charge\",\r",
									"        \"title\",\r",
									"        \"description\",\r",
									"        \"serviceType\",\r",
									"        \"locationType\",\r",
									"        \"availability\",\r",
									"        \"workSample\",\r",
									"        \"categoryId\",\r",
									"        \"subcategoryId\",\r",
									"        \"tags\",\r",
									"        \"comments\",\r",
									"        \"ratings\",\r",
									"        \"ratingAverages\",\r",
									"        \"ratingTotalsAndCounts\",\r",
									"        \"skillTrade\",\r",
									"        \"isTradable\",\r",
									"        \"isActive\",\r",
									"        \"createdOn\",\r",
									"        \"createdBy\",\r",
									"        \"updatedOn\",\r",
									"        \"updatedBy\",\r",
									"        \"isDeleted\"\r",
									"      ]\r",
									"    },\r",
									"    \"categoryTuple\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"item1\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"item2\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"item1\",\r",
									"        \"item2\"\r",
									"      ]\r",
									"    },\r",
									"    \"currentUserId\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"comments\": {\r",
									"      \"type\": \"null\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"serviceListing\",\r",
									"    \"categoryTuple\",\r",
									"    \"currentUserId\",\r",
									"    \"comments\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51689/listing/listing/GetService/?id=6681fcc85e8e5100015d0a28",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"GetService",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "6681fcc85e8e5100015d0a28"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBalance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"balance\": {\r",
									"      \"type\": \"number\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"balance\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51689/listing/listing/getBalance",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"getBalance"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"categories\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"value\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subcategory\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"isDeleted\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"value\",\r",
									"            \"name\",\r",
									"            \"subcategory\",\r",
									"            \"isDeleted\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"value\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subcategory\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"isDeleted\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"value\",\r",
									"            \"name\",\r",
									"            \"subcategory\",\r",
									"            \"isDeleted\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"value\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subcategory\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"isDeleted\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"value\",\r",
									"            \"name\",\r",
									"            \"subcategory\",\r",
									"            \"isDeleted\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"value\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subcategory\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"isDeleted\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"value\",\r",
									"            \"name\",\r",
									"            \"subcategory\",\r",
									"            \"isDeleted\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"value\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subcategory\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"isDeleted\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"value\",\r",
									"            \"name\",\r",
									"            \"subcategory\",\r",
									"            \"isDeleted\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"value\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subcategory\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"isDeleted\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"value\",\r",
									"            \"name\",\r",
									"            \"subcategory\",\r",
									"            \"isDeleted\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"value\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subcategory\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"isDeleted\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"value\",\r",
									"            \"name\",\r",
									"            \"subcategory\",\r",
									"            \"isDeleted\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"value\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subcategory\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"null\"\r",
									"                    },\r",
									"                    \"value\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"isDeleted\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"value\",\r",
									"                    \"name\",\r",
									"                    \"isDeleted\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"isDeleted\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"value\",\r",
									"            \"name\",\r",
									"            \"subcategory\",\r",
									"            \"isDeleted\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"categories\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51689/listing/listing/getCategories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"getCategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSentRequests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"data\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"senderId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"senderName\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"recipientId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"recipientName\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"listingId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"totalHours\": {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            \"totalAmount\": {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            \"status\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"isViewed\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"isCompletedBySender\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"isCompletedBySeller\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"category\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"message\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"senderLastName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"senderCity\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"senderCountry\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"createdOn\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"updatedOn\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"isTradable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"senderId\",\r",
									"            \"senderName\",\r",
									"            \"recipientId\",\r",
									"            \"recipientName\",\r",
									"            \"listingId\",\r",
									"            \"totalHours\",\r",
									"            \"totalAmount\",\r",
									"            \"status\",\r",
									"            \"isViewed\",\r",
									"            \"isCompletedBySender\",\r",
									"            \"isCompletedBySeller\",\r",
									"            \"category\",\r",
									"            \"categoryId\",\r",
									"            \"title\",\r",
									"            \"message\",\r",
									"            \"senderLastName\",\r",
									"            \"senderCity\",\r",
									"            \"senderCountry\",\r",
									"            \"createdOn\",\r",
									"            \"updatedOn\",\r",
									"            \"isTradable\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"data\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51689/listing/listing/getSentRequests",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"getSentRequests"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetWorkSample",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"defaultImg\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"defaultImg\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51689/listing/listing/getWorkSample?id=6681fcc85e8e5100015d0a28",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"getWorkSample"
							],
							"query": [
								{
									"key": "id",
									"value": "6681fcc85e8e5100015d0a28"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetServiceCategoryCount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"data\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"count\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"data\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"sortPagination\": {\r\n    \"limit\": 9,\r\n    \"offset\": 0\r\n  },\r\n  \"terms\": {\r\n    \"categoryIndex\": null,\r\n    \"searchString\": \"\",\r\n    \"subcategoryIndex\": null,\r\n    \"uId\": null\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:51689/listing/listing/GetServiceCategoryCount",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"GetServiceCategoryCount"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTradeRequests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"data\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"totalCount\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"data\",\r",
									"    \"totalCount\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"direction\": \"descending\",\r\n  \"limit\": 5,\r\n  \"offset\": 0,\r\n  \"sortBy\": \"createdOn\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:51689/listing/listing/getTradeRequests",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"getTradeRequests"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchListingsCopy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"data\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerName\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerFirstName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"sellerLastName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"profilePictureId\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePictureId\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"photoSrc\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePhotoSrc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"charge\": {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"serviceType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"isTradable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"skillTrade\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"text\": {\r",
									"                      \"type\": \"string\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"text\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"locationType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"ratings\": {\r",
									"              \"type\": \"null\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"sellerId\",\r",
									"            \"sellerName\",\r",
									"            \"sellerFirstName\",\r",
									"            \"sellerLastName\",\r",
									"            \"profilePictureId\",\r",
									"            \"samplePictureId\",\r",
									"            \"photoSrc\",\r",
									"            \"samplePhotoSrc\",\r",
									"            \"charge\",\r",
									"            \"title\",\r",
									"            \"description\",\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"serviceType\",\r",
									"            \"isTradable\",\r",
									"            \"skillTrade\",\r",
									"            \"locationType\",\r",
									"            \"ratings\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerName\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerFirstName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"sellerLastName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"profilePictureId\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePictureId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"photoSrc\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePhotoSrc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"charge\": {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"serviceType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"isTradable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"skillTrade\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"text\": {\r",
									"                      \"type\": \"string\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"text\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"locationType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"ratings\": {\r",
									"              \"type\": \"null\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"sellerId\",\r",
									"            \"sellerName\",\r",
									"            \"sellerFirstName\",\r",
									"            \"sellerLastName\",\r",
									"            \"profilePictureId\",\r",
									"            \"samplePictureId\",\r",
									"            \"photoSrc\",\r",
									"            \"samplePhotoSrc\",\r",
									"            \"charge\",\r",
									"            \"title\",\r",
									"            \"description\",\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"serviceType\",\r",
									"            \"isTradable\",\r",
									"            \"skillTrade\",\r",
									"            \"locationType\",\r",
									"            \"ratings\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerName\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerFirstName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"sellerLastName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"profilePictureId\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePictureId\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"photoSrc\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePhotoSrc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"charge\": {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"serviceType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"isTradable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"skillTrade\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"text\": {\r",
									"                      \"type\": \"string\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"text\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"locationType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"ratings\": {\r",
									"              \"type\": \"null\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"sellerId\",\r",
									"            \"sellerName\",\r",
									"            \"sellerFirstName\",\r",
									"            \"sellerLastName\",\r",
									"            \"profilePictureId\",\r",
									"            \"samplePictureId\",\r",
									"            \"photoSrc\",\r",
									"            \"samplePhotoSrc\",\r",
									"            \"charge\",\r",
									"            \"title\",\r",
									"            \"description\",\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"serviceType\",\r",
									"            \"isTradable\",\r",
									"            \"skillTrade\",\r",
									"            \"locationType\",\r",
									"            \"ratings\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerName\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerFirstName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"sellerLastName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"profilePictureId\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePictureId\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"photoSrc\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePhotoSrc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"charge\": {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"serviceType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"isTradable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"skillTrade\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": {}\r",
									"            },\r",
									"            \"locationType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"ratings\": {\r",
									"              \"type\": \"null\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"sellerId\",\r",
									"            \"sellerName\",\r",
									"            \"sellerFirstName\",\r",
									"            \"sellerLastName\",\r",
									"            \"profilePictureId\",\r",
									"            \"samplePictureId\",\r",
									"            \"photoSrc\",\r",
									"            \"samplePhotoSrc\",\r",
									"            \"charge\",\r",
									"            \"title\",\r",
									"            \"description\",\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"serviceType\",\r",
									"            \"isTradable\",\r",
									"            \"skillTrade\",\r",
									"            \"locationType\",\r",
									"            \"ratings\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerName\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerFirstName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"sellerLastName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"profilePictureId\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePictureId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"photoSrc\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePhotoSrc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"charge\": {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"serviceType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"isTradable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"skillTrade\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"text\": {\r",
									"                      \"type\": \"string\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"text\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"locationType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"ratings\": {\r",
									"              \"type\": \"null\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"sellerId\",\r",
									"            \"sellerName\",\r",
									"            \"sellerFirstName\",\r",
									"            \"sellerLastName\",\r",
									"            \"profilePictureId\",\r",
									"            \"samplePictureId\",\r",
									"            \"photoSrc\",\r",
									"            \"samplePhotoSrc\",\r",
									"            \"charge\",\r",
									"            \"title\",\r",
									"            \"description\",\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"serviceType\",\r",
									"            \"isTradable\",\r",
									"            \"skillTrade\",\r",
									"            \"locationType\",\r",
									"            \"ratings\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerName\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerFirstName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"sellerLastName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"profilePictureId\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePictureId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"photoSrc\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePhotoSrc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"charge\": {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"serviceType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"isTradable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"skillTrade\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"text\": {\r",
									"                      \"type\": \"string\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"text\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"locationType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"ratings\": {\r",
									"              \"type\": \"null\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"sellerId\",\r",
									"            \"sellerName\",\r",
									"            \"sellerFirstName\",\r",
									"            \"sellerLastName\",\r",
									"            \"profilePictureId\",\r",
									"            \"samplePictureId\",\r",
									"            \"photoSrc\",\r",
									"            \"samplePhotoSrc\",\r",
									"            \"charge\",\r",
									"            \"title\",\r",
									"            \"description\",\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"serviceType\",\r",
									"            \"isTradable\",\r",
									"            \"skillTrade\",\r",
									"            \"locationType\",\r",
									"            \"ratings\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerName\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerFirstName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"sellerLastName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"profilePictureId\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePictureId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"photoSrc\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePhotoSrc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"charge\": {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"serviceType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"isTradable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"skillTrade\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"text\": {\r",
									"                      \"type\": \"string\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"text\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"locationType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"ratings\": {\r",
									"              \"type\": \"null\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"sellerId\",\r",
									"            \"sellerName\",\r",
									"            \"sellerFirstName\",\r",
									"            \"sellerLastName\",\r",
									"            \"profilePictureId\",\r",
									"            \"samplePictureId\",\r",
									"            \"photoSrc\",\r",
									"            \"samplePhotoSrc\",\r",
									"            \"charge\",\r",
									"            \"title\",\r",
									"            \"description\",\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"serviceType\",\r",
									"            \"isTradable\",\r",
									"            \"skillTrade\",\r",
									"            \"locationType\",\r",
									"            \"ratings\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerName\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerFirstName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"sellerLastName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"profilePictureId\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePictureId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"photoSrc\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePhotoSrc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"charge\": {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"serviceType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"isTradable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"skillTrade\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"text\": {\r",
									"                      \"type\": \"string\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"text\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"locationType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"ratings\": {\r",
									"              \"type\": \"null\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"sellerId\",\r",
									"            \"sellerName\",\r",
									"            \"sellerFirstName\",\r",
									"            \"sellerLastName\",\r",
									"            \"profilePictureId\",\r",
									"            \"samplePictureId\",\r",
									"            \"photoSrc\",\r",
									"            \"samplePhotoSrc\",\r",
									"            \"charge\",\r",
									"            \"title\",\r",
									"            \"description\",\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"serviceType\",\r",
									"            \"isTradable\",\r",
									"            \"skillTrade\",\r",
									"            \"locationType\",\r",
									"            \"ratings\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerName\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"sellerFirstName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"sellerLastName\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"profilePictureId\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePictureId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"photoSrc\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"samplePhotoSrc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"charge\": {\r",
									"              \"type\": \"number\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"subcategoryId\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"serviceType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"isTradable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"skillTrade\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"text\": {\r",
									"                      \"type\": \"string\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"id\",\r",
									"                    \"text\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"locationType\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"ratings\": {\r",
									"              \"type\": \"null\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"sellerId\",\r",
									"            \"sellerName\",\r",
									"            \"sellerFirstName\",\r",
									"            \"sellerLastName\",\r",
									"            \"profilePictureId\",\r",
									"            \"samplePictureId\",\r",
									"            \"photoSrc\",\r",
									"            \"samplePhotoSrc\",\r",
									"            \"charge\",\r",
									"            \"title\",\r",
									"            \"description\",\r",
									"            \"categoryId\",\r",
									"            \"subcategoryId\",\r",
									"            \"serviceType\",\r",
									"            \"isTradable\",\r",
									"            \"skillTrade\",\r",
									"            \"locationType\",\r",
									"            \"ratings\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"totalCount\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"data\",\r",
									"    \"totalCount\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"sortPagination\": {\r\n    \"limit\": 9,\r\n    \"offset\": 0\r\n  },\r\n  \"terms\": {\r\n    \"categoryIndex\": 1,\r\n    \"searchString\": \"\",\r\n    \"subcategoryIndex\": null,\r\n    \"uId\": null\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:51689/listing/listing/searchListings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"searchListings"
							]
						}
					},
					"response": []
				},
				{
					"name": "SendTradeRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema={\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"id\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"id\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ListingId\": \"64f4901046f5d700012fe8f9\",\r\n  \"Message\": \"test\",\r\n  \"TotalAmount\": 0,\r\n  \"TotalHours\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:51689/listing/listing/sendTradeRequest",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"sendTradeRequest"
							]
						}
					},
					"response": []
				},
				{
					"name": "TogglesActive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"667df9c97f4a6f0001e7ab30\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:51689/listing/listing/toggleIsActive",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"toggleIsActive"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateReceivedRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Id\": \"64f49cc846f5d700012fe947\",\r\n  \"Status\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:51689/listing/listing/updateReceivedRequest",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"updateReceivedRequest"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Chat",
			"item": [
				{
					"name": "GetFirstChatRoom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									" // \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"chatroom\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"myCurrentUser\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"chatroom\",\r",
									"    \"myCurrentUser\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/profile/profile/getFirstChatroom",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile",
								"profile",
								"getFirstChatroom"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetChatRoomDetailsList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"result\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"userIdToList\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"userIdTo\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"userNameTo\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"userIdFrom\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"userNameFrom\": {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            \"profilePicUrl\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"unreadMessages\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"userIdToList\",\r",
									"            \"userIdTo\",\r",
									"            \"userNameTo\",\r",
									"            \"userIdFrom\",\r",
									"            \"userNameFrom\",\r",
									"            \"profilePicUrl\",\r",
									"            \"unreadMessages\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"result\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"UserIdToList\": [\r\n    \"64eef222faa3220001654ea2\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/profile/profile/getChatRoomDetailsList",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile",
								"profile",
								"getChatRoomDetailsList"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notficaton",
			"item": [
				{
					"name": "GetNotiifiicationCount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"noOfNotification\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"noOfMessages\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"noOfNotification\",\r",
									"    \"noOfMessages\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/notification/notification/getNewNotificationCount",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"notification",
								"notification",
								"getNewNotificationCount"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetNotifiicatiion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"userNotifications\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"totalCount\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"userNotifications\",\r",
									"    \"totalCount\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/notification/notification/getNotification",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"notification",
								"notification",
								"getNotification"
							]
						}
					},
					"response": []
				},
				{
					"name": "NotiifiicationLoadMore",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"userNotifications\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"totalCount\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\",\r",
									"    \"userNotifications\",\r",
									"    \"totalCount\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/notification/notification/getNotification/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"notification",
								"notification",
								"getNotification",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ReadAllNotifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema= {\r",
									" //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/notification/notification/readAllNotifications",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"notification",
								"notification",
								"readAllNotifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "ReadMarkedNotifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"  const schema=  {\r",
									"  //\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"success\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"success\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"response contains valid json data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"\r",
									"//headers\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"  \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/notification/notification/readAllNotifications",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"notification",
								"notification",
								"readAllNotifications"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:60190",
			"type": "string"
		}
	]
}